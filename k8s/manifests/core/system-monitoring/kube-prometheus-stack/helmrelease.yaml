---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: system-monitoring
spec:
  interval: 6h
  maxHistory: 2
  timeout: 20m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 40.2.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    createNamespace: true
    crds: CreateReplace
    remediation: # perform remediation when helm install fails
      retries: 5
  upgrade:
    crds: CreateReplace
    remediation: # perform remediation when helm upgrade fails
      retries: 5
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    fullnameOverride: prometheus
    coreDns:
      enabled: true

    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: false # FIXME

    kubeEtcd:
      enabled: true

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance

    kubeProxy:
      enabled: false # FIXME

    kubeScheduler:
      enabled: false # FIXME

    kubeStateMetrics:
      enabled: true

    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        # limits:
        # memory: 326M

      prometheusConfigReloader:
        resources:
          requests:
            cpu: 11m
            memory: 24M
          # limits:
          # memory: 32M

    grafana:
      ingress:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
        hosts:
          - &host "grafana.${SECRET_DOMAIN}"
        tls:
          - secretName: grafana-general-tls
            hosts:
              - *host
      service:
        annotations:
          cfargotunnel.com/cluster-tunnel: k3s-cluster-tunnel
      grafana.ini:
        server:
          root_url: "https://grafana.${SECRET_DOMAIN}"
        auth.generic_oauth:
          enabled: true
          allow_sign_up: true
          name: Dex
          client_id: grafana-sso
          client_secret: "kubeappsClientSecret"
          scopes: openid profile email groups
          auth_url: "https://dex.${SECRET_DOMAIN}/auth"
          token_url: "https://dex.${SECRET_DOMAIN}/token"
          api_url: https://dex.475962.xyz/userinfo
      enabled: true
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            global:
              enabled: true

    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    prometheus:
      prometheusSpec:
        additionalScrapeConfigs:
          - job_name: your_job_name
            scrape_interval: 15s
            kubernetes_sd_configs:
              - role: service
            relabel_configs:
              - source_labels: [__meta_kubernetes_service_port_name]
                action: keep
                regex: metrics
